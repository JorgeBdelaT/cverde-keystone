datasource postgresql {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model Alliance {
  id                                  Int                     @id @default(autoincrement())
  createdAt                           DateTime?
  name                                String?
  description                         String?
  endDate                             DateTime?
  isActive                            Boolean?
  logo_filesize                       Int?
  logo_extension                      String?
  logo_width                          Int?
  logo_height                         Int?
  logo_mode                           String?
  logo_id                             String?
  inChargeUser                        User?                   @relation("AllianceinChargeUser", fields: [inChargeUserId], references: [id])
  inChargeUserId                      Int?                    @map("inChargeUser")
  socialNetworks                      AllianceSocialNetwork[] @relation("Alliance_socialNetworks_many", references: [id])
  from_AllianceSocialNetwork_alliance AllianceSocialNetwork[] @relation("AllianceSocialNetworkalliance")

  @@index([inChargeUserId])
}

model AllianceSocialNetwork {
  id                           Int            @id @default(autoincrement())
  link                         String?
  name                         String?
  socialNetwork                SocialNetwork? @relation("AllianceSocialNetworksocialNetwork", fields: [socialNetworkId], references: [id])
  socialNetworkId              Int?           @map("socialNetwork")
  alliance                     Alliance?      @relation("AllianceSocialNetworkalliance", fields: [allianceId], references: [id])
  allianceId                   Int?           @map("alliance")
  from_Alliance_socialNetworks Alliance[]     @relation("Alliance_socialNetworks_many", references: [id])

  @@index([socialNetworkId])
  @@index([allianceId])
}

model SocialNetwork {
  id                                           Int                         @id @default(autoincrement())
  logoUrl                                      String?
  name                                         String?
  from_AllianceSocialNetwork_socialNetwork     AllianceSocialNetwork[]     @relation("AllianceSocialNetworksocialNetwork")
  from_CoordinationSocialNetwork_socialNetwork CoordinationSocialNetwork[] @relation("CoordinationSocialNetworksocialNetwork")
}

model Coordination {
  id                                          Int                         @id @default(autoincrement())
  createdAt                                   DateTime?
  description                                 String?
  logoUrl                                     String?
  name                                        String?
  organizationName                            String?
  members                                     CoordinationUserPosition[]  @relation("CoordinationUserPositioncoordination")
  socialNetworks                              CoordinationSocialNetwork[] @relation("Coordination_socialNetworks_many", references: [id])
  from_CoordinationSocialNetwork_coordination CoordinationSocialNetwork[] @relation("CoordinationSocialNetworkcoordination")
}

model CoordinationSocialNetwork {
  id                               Int            @id @default(autoincrement())
  link                             String?
  name                             String?
  socialNetwork                    SocialNetwork? @relation("CoordinationSocialNetworksocialNetwork", fields: [socialNetworkId], references: [id])
  socialNetworkId                  Int?           @map("socialNetwork")
  coordination                     Coordination?  @relation("CoordinationSocialNetworkcoordination", fields: [coordinationId], references: [id])
  coordinationId                   Int?           @map("coordination")
  from_Coordination_socialNetworks Coordination[] @relation("Coordination_socialNetworks_many", references: [id])

  @@index([socialNetworkId])
  @@index([coordinationId])
}

model CoordinationUserPosition {
  id             Int           @id @default(autoincrement())
  createdAt      DateTime?
  name           String?
  endDate        DateTime?
  startDate      DateTime?
  coordination   Coordination? @relation("CoordinationUserPositioncoordination", fields: [coordinationId], references: [id])
  coordinationId Int?          @map("coordination")
  position       Position?     @relation("CoordinationUserPositionposition", fields: [positionId], references: [id])
  positionId     Int?          @map("position")
  user           User?         @relation("CoordinationUserPositionuser", fields: [userId], references: [id])
  userId         Int?          @map("user")

  @@index([coordinationId])
  @@index([positionId])
  @@index([userId])
}

model Position {
  id                                     Int                        @id @default(autoincrement())
  createdAt                              DateTime?
  description                            String?
  name                                   String?
  from_CoordinationUserPosition_position CoordinationUserPosition[] @relation("CoordinationUserPositionposition")
}

model Post {
  id          Int       @id @default(autoincrement())
  title       String?
  status      String?
  content     Json?
  publishDate DateTime?
  author      User?     @relation("Postauthor", fields: [authorId], references: [id])
  authorId    Int?      @map("author")
  tags        Tag[]     @relation("Post_tags_Tag_posts", references: [id])

  @@index([authorId])
}

model Tag {
  id    Int     @id @default(autoincrement())
  name  String?
  posts Post[]  @relation("Post_tags_Tag_posts", references: [id])
}

model User {
  id                                 Int                        @id @default(autoincrement())
  email                              String?                    @unique
  isAdmin                            Boolean?
  name                               String?
  password                           String?
  alliances                          Alliance[]                 @relation("AllianceinChargeUser")
  posts                              Post[]                     @relation("Postauthor")
  from_CoordinationUserPosition_user CoordinationUserPosition[] @relation("CoordinationUserPositionuser")
}